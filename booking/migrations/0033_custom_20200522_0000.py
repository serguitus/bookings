# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-03-29 02:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def migrate_new_data(apps, schema_editor):

    QuoteAllotment = apps.get_model('booking', 'QuoteAllotment')
    QuoteTransfer = apps.get_model('booking', 'QuoteTransfer')
    QuoteExtra = apps.get_model('booking', 'QuoteExtra')
    QuotePackage = apps.get_model('booking', 'QuotePackage')
    QuotePackageAllotment = apps.get_model('booking', 'QuotePackageAllotment')
    QuotePackageTransfer = apps.get_model('booking', 'QuotePackageTransfer')
    QuotePackageExtra = apps.get_model('booking', 'QuotePackageExtra')

    for service in QuoteAllotment.objects.all():
        new_service = build_new_quote_allotment(apps, service)
        new_service.save()
        migrate_quote_pax_variants(apps, service.pk)

    for service in QuoteTransfer.objects.all():
        new_service = build_new_quote_transfer(apps, service)
        new_service.save()
        migrate_quote_pax_variants(apps, service.pk)

    for service in QuoteExtra.objects.all():
        new_service = build_new_quote_extra(apps, service)
        new_service.save()
        migrate_quote_pax_variants(apps, service.pk)

    for service in QuotePackage.objects.all():
        new_service = build_new_quote_package(apps, service)
        new_service.save()
        migrate_quote_pax_variants(apps, service.pk)
        for package_service in QuotePackageAllotment.objects.filter(quote_package=service):
            new_package_service = build_new_quote_package_allotment(apps, package_service)
            new_package_service.quote_package = new_service
            new_package_service.save()
        for package_service in QuotePackageTransfer.objects.filter(quote_package=service):
            new_package_service = build_new_quote_package_transfer(apps, package_service)
            new_package_service.quote_package = new_service
            new_package_service.save()
        for package_service in QuotePackageExtra.objects.filter(quote_package=service):
            new_package_service = build_new_quote_package_extra(apps, package_service)
            new_package_service.quote_package = new_service
            new_package_service.save()


def copy_quote_service(new_service, service):

    new_service.pk = service.pk
    new_service.base_service_id = service.base_service_id
    new_service.name = service.name
    new_service.description = service.description
    new_service.time = service.time
    new_service.datetime_from = service.datetime_from
    new_service.datetime_to = service.datetime_to
    new_service.status = service.status
    new_service.base_location_id = service.base_location_id
    new_service.service_addon_id = service.service_addon_id


def build_new_quote_allotment(apps, service):

    NewQuoteAllotment = apps.get_model('booking', 'NewQuoteAllotment')

    new_service = NewQuoteAllotment()
    copy_quote_service(new_service, service)
    new_service.quote_id = service.quote_id
    new_service.provider_id = service.provider_id

    new_service.service_id = service.service_id
    new_service.room_type_id = service.room_type_id
    new_service.board_type = service.board_type
    return new_service


def build_new_quote_package_allotment(apps, package_service):

    NewQuoteAllotment = apps.get_model('booking', 'NewQuoteAllotment')

    new_service = NewQuoteAllotment()
    copy_quote_service(new_service, package_service)
    new_service.quote_id = package_service.quote_package.quote_id
    new_service.provider_id = package_service.provider_id

    new_service.service_id = package_service.service_id
    new_service.room_type_id = package_service.room_type_id
    new_service.board_type = package_service.board_type

    new_service.pk = None
    return new_service


def build_new_quote_transfer(apps, service):

    NewQuoteTransfer = apps.get_model('booking', 'NewQuoteTransfer')

    new_service = NewQuoteTransfer()
    copy_quote_service(new_service, service)
    new_service.quote_id = service.quote_id
    new_service.provider_id = service.provider_id

    new_service.service_id = service.service_id
    new_service.pickup_id = service.pickup_id
    new_service.dropoff_id = service.dropoff_id
    new_service.location_from_id = service.location_from_id
    new_service.location_to_id = service.location_to_id
    new_service.place_from_id = service.place_from_id
    new_service.place_to_id = service.place_to_id
    new_service.schedule_from_id = service.schedule_from_id
    new_service.schedule_to_id = service.schedule_to_id
    new_service.schedule_time_from = service.schedule_time_from
    new_service.schedule_time_to = service.schedule_time_to
    new_service.quantity = service.quantity
    return new_service


def build_new_quote_package_transfer(apps, package_service):


    NewQuoteTransfer = apps.get_model('booking', 'NewQuoteTransfer')

    new_service = NewQuoteTransfer()
    copy_quote_service(new_service, package_service)
    new_service.quote_id = package_service.quote_package.quote_id
    new_service.provider_id = package_service.provider_id

    new_service.service_id = package_service.service_id
    new_service.pickup_id = package_service.pickup_id
    new_service.dropoff_id = package_service.dropoff_id
    new_service.location_from_id = package_service.location_from_id
    new_service.location_to_id = package_service.location_to_id
    new_service.place_from_id = package_service.place_from_id
    new_service.place_to_id = package_service.place_to_id
    new_service.schedule_from_id = package_service.schedule_from_id
    new_service.schedule_to_id = package_service.schedule_to_id
    new_service.schedule_time_from = package_service.schedule_time_from
    new_service.schedule_time_to = package_service.schedule_time_to
    new_service.quantity = package_service.quantity

    new_service.pk = None
    return new_service


def build_new_quote_extra(apps, service):

    NewQuoteExtra = apps.get_model('booking', 'NewQuoteExtra')

    new_service = NewQuoteExtra()
    copy_quote_service(new_service, service)
    new_service.quote_id = service.quote_id
    new_service.provider_id = service.provider_id

    new_service.service_id = service.service_id
    new_service.pickup_office_id = service.pickup_office_id
    new_service.dropoff_office_id = service.dropoff_office_id
    new_service.parameter = service.parameter
    new_service.quantity = service.quantity
    return new_service


def build_new_quote_package_extra(apps, package_service):

    NewQuoteExtra = apps.get_model('booking', 'NewQuoteExtra')

    new_service = NewQuoteExtra()
    copy_quote_service(new_service, package_service)
    new_service.quote_id = package_service.quote_package.quote_id
    new_service.provider_id = package_service.provider_id

    new_service.service_id = package_service.service_id
    new_service.pickup_office_id = package_service.pickup_office_id
    new_service.dropoff_office_id = package_service.dropoff_office_id
    new_service.parameter = package_service.parameter
    new_service.quantity = package_service.quantity

    new_service.pk = None
    return new_service


def build_new_quote_package(apps, service):

    NewQuotePackage = apps.get_model('booking', 'NewQuotePackage')

    new_service = NewQuotePackage()
    copy_quote_service(new_service, service)
    new_service.quote_id = service.quote_id

    new_service.service_id = service.service_id
    new_service.price_by_package_catalogue = service.price_by_package_catalogue
    return new_service


def migrate_quote_pax_variants(apps, service_pk):

    QuoteServicePaxVariant = apps.get_model('booking', 'QuoteServicePaxVariant')
    NewQuoteServicePaxVariant = apps.get_model('booking', 'NewQuoteServicePaxVariant')

    for variant in QuoteServicePaxVariant.objects.filter(quote_service=service_pk):
        new_variant = NewQuoteServicePaxVariant()
        new_variant.pk = variant.pk
        new_variant.quote_pax_variant_id = variant.quote_pax_variant_id
        new_variant.quote_service_id = variant.quote_service_id

        new_variant.manual_costs = variant.manual_costs
        new_variant.cost_single_amount = variant.cost_single_amount
        new_variant.cost_double_amount = variant.cost_double_amount
        new_variant.cost_triple_amount = variant.cost_triple_amount
        new_variant.cost_qdrple_amount = variant.cost_qdrple_amount
        new_variant.free_cost_single = variant.free_cost_single
        new_variant.free_cost_double = variant.free_cost_double
        new_variant.free_cost_triple = variant.free_cost_triple
        new_variant.free_cost_qdrple = variant.free_cost_qdrple

        new_variant.manual_prices = variant.manual_prices
        new_variant.price_single_amount = variant.price_single_amount
        new_variant.price_double_amount = variant.price_double_amount
        new_variant.price_triple_amount = variant.price_triple_amount
        new_variant.price_qdrple_amount = variant.price_qdrple_amount
        new_variant.free_price_single = variant.free_price_single
        new_variant.free_price_double = variant.free_price_double
        new_variant.free_price_triple = variant.free_price_triple
        new_variant.free_price_qdrple = variant.free_price_qdrple

        new_variant.save()


def backwards_function(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('booking', '0032_auto_20200521_2140'),
        ('config', '0019_custom_20200522_0000'),
    ]

    operations = [

        migrations.RunPython(migrate_new_data, backwards_function),

    ]
