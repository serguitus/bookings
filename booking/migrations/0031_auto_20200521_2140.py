# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-05-20 01:40
from __future__ import unicode_literals

import concurrency.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0010_office_bank_details'),
        ('booking', '0030_auto_20200521_0211'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewBookingService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Detail', max_length=250)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('cost_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost')),
                ('cost_comments', models.CharField(blank=True, max_length=1000, null=True)),
                ('price_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price')),
                ('price_comments', models.CharField(blank=True, max_length=1000, null=True)),
                ('datetime_from', models.DateField(blank=True, null=True, verbose_name='From')),
                ('datetime_to', models.DateField(blank=True, null=True, verbose_name='To')),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('RQ', 'Requested'), ('PH', 'Phone Confirmed'), ('OK', 'Confirmed'), ('CD', 'Coordinated'), ('NS', 'No Show'), ('CN', 'Cancelled')], default='PD', max_length=5)),
                ('p_notes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Private Notes')),
                ('v_notes', models.CharField(blank=True, max_length=200, null=True, verbose_name='Voucher Notes')),
                ('manual_cost', models.BooleanField(default=False)),
                ('manual_price', models.BooleanField(default=False)),
                ('base_category', models.CharField(blank=True, choices=[('BA', 'Booking Allotment'), ('BT', 'Booking Transfer'), ('BE', 'Booking Extra'), ('BP', 'Booking Package'), ('PA', 'Booking Package Allotment'), ('PT', 'Booking Package Transfer'), ('PE', 'Booking Package Extra')], max_length=5, null=True)),
            ],
            options={
                'verbose_name': 'Booking Service',
                'verbose_name_plural': 'Bookings Services',
                'ordering': ['datetime_from', 'datetime_to', 'time'],
            },
        ),
        migrations.CreateModel(
            name='NewBookingServicePax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('group', models.SmallIntegerField(verbose_name='Room')),
                ('cost_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost')),
                ('cost_comments', models.CharField(blank=True, max_length=1000, null=True)),
                ('force_adult', models.BooleanField(default=False)),
                ('is_cost_free', models.BooleanField(default=False)),
                ('price_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price')),
                ('price_comments', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_price_free', models.BooleanField(default=False)),
                ('booking_pax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingPax')),
            ],
            options={
                'verbose_name': 'Booking Service Pax',
                'verbose_name_plural': 'Booking Service Rooming',
            },
        ),
        migrations.CreateModel(
            name='NewBookingPackage',
            fields=[
                ('newbookingservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewBookingService')),
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('price_by_package_catalogue', models.BooleanField(default=True, verbose_name='Use Catalogue Price')),
                ('voucher_detail', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Booking Package',
                'verbose_name_plural': 'Bookings Packages',
            },
            bases=('booking.newbookingservice',),
        ),
        migrations.CreateModel(
            name='BookingProvidedService',
            fields=[
                ('newbookingservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewBookingService')),
                ('conf_number', models.CharField(blank=True, max_length=20, null=True)),
                ('provider_notes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Provider Notes')),
                ('cost_amount_to_pay', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cost_amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Paid')),
                ('has_payment', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Booking Provided Service',
                'verbose_name_plural': 'Booking Provided Services',
                'ordering': ['datetime_from', 'datetime_to', 'time'],
            },
            bases=('booking.newbookingservice',),
        ),
        migrations.CreateModel(
            name='NewBookingAllotment',
            fields=[
                ('bookingprovidedservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.BookingProvidedService')),
                ('board_type', models.CharField(choices=[('NB', 'No Board'), ('BB', 'Breakfast Board'), ('HB', 'Half Board'), ('FB', 'Full Board'), ('AI', 'All Included')], max_length=5)),
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newbookingallotment_room_type', to='config.RoomType')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Allotment')),
            ],
            options={
                'verbose_name': 'Booking Accomodation',
                'verbose_name_plural': 'Bookings Accomodations',
            },
            bases=('booking.bookingprovidedservice', models.Model),
        ),
        migrations.CreateModel(
            name='NewBookingTransfer',
            fields=[
                ('bookingprovidedservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.BookingProvidedService')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('schedule_time_from', models.TimeField(blank=True, null=True)),
                ('schedule_time_to', models.TimeField(blank=True, null=True)),
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('dropoff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_dropoff', to='config.Allotment')),
                ('location_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_location_from', to='config.Location', verbose_name='Location from')),
                ('location_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_location_to', to='config.Location', verbose_name='Location to')),
                ('pickup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_pickup', to='config.Allotment')),
                ('place_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_place_from', to='config.Place')),
                ('place_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_place_to', to='config.Place')),
                ('schedule_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_schedule_from', to='config.Schedule')),
                ('schedule_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingtransfer_schedule_to', to='config.Schedule')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Transfer')),
            ],
            options={
                'verbose_name': 'Booking Transfer',
                'verbose_name_plural': 'Booking Transfers',
            },
            bases=('booking.bookingprovidedservice', models.Model),
        ),
        migrations.CreateModel(
            name='NewBookingExtra',
            fields=[
                ('bookingprovidedservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.BookingProvidedService')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('parameter', models.SmallIntegerField(default=0, verbose_name='Hours')),
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('dropoff_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingextra_dropoff_office', to='config.CarRentalOffice')),
                ('pickup_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingextra_pickup_office', to='config.CarRentalOffice')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newbookingextra_service', to='config.Extra')),
            ],
            options={
                'verbose_name': 'Booking Extra',
                'verbose_name_plural': 'Booking Extras',
            },
            bases=('booking.bookingprovidedservice', models.Model),
        ),
        migrations.CreateModel(
            name='BookingBookDetail',
            fields=[
                ('newbookingservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewBookingService')),
            ],
            options={
                'verbose_name': 'Booking Service Book Detail',
                'verbose_name_plural': 'Bookings Services Book Details',
            },
            bases=('booking.newbookingservice',),
        ),
        migrations.CreateModel(
            name='BookingBookDetailAllotment',
            fields=[
                ('bookingbookdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.BookingBookDetail')),
                ('board_type', models.CharField(choices=[('NB', 'No Board'), ('BB', 'Breakfast Board'), ('HB', 'Half Board'), ('FB', 'Full Board'), ('AI', 'All Included')], max_length=5)),
            ],
            options={
                'verbose_name': 'Booking Service Book Detail Allotment',
                'verbose_name_plural': 'Bookings Services Book Details Allotments',
            },
            bases=('booking.bookingbookdetail', models.Model),
        ),
        migrations.CreateModel(
            name='BookingBookDetailTransfer',
            fields=[
                ('bookingbookdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.BookingBookDetail')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('schedule_time_from', models.TimeField(blank=True, null=True)),
                ('schedule_time_to', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Booking Service Book Detail Transfer',
                'verbose_name_plural': 'Bookings Services Book Details Transfers',
            },
            bases=('booking.bookingbookdetail', models.Model),
        ),
        migrations.CreateModel(
            name='BookingBookDetailExtra',
            fields=[
                ('bookingbookdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.BookingBookDetail')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('parameter', models.SmallIntegerField(default=0, verbose_name='Hours')),
            ],
            options={
                'verbose_name': 'Booking Service Book Detail Extra',
                'verbose_name_plural': 'Bookings Services Book Details Extras',
            },
            bases=('booking.bookingbookdetail', models.Model),
        ),
        migrations.CreateModel(
            name='NewProviderBookingPaymentService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_cost_amount_to_pay', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('service_cost_amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('provider_payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.ProviderBookingPayment')),
                ('provider_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingProvidedService')),
            ],
            options={
                'verbose_name': 'Provider Booking Payment',
                'verbose_name_plural': 'Providers Bookings Payments',
            },
        ),
        migrations.AlterUniqueTogether(
            name='newproviderbookingpaymentservice',
            unique_together=set([('provider_payment', 'provider_service')]),
        ),
        migrations.CreateModel(
            name='NewQuoteService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Detail', max_length=250)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('datetime_from', models.DateField(blank=True, null=True, verbose_name='From')),
                ('datetime_to', models.DateField(blank=True, null=True, verbose_name='To')),
                ('status', models.CharField(choices=[('DR', 'Draft'), ('RD', 'Ready')], default='DR', max_length=5)),
            ],
            options={
                'verbose_name': 'Quote Service',
                'verbose_name_plural': 'Quote Services',
                'default_permissions': ('add', 'change'),
            },
        ),
        migrations.CreateModel(
            name='NewQuoteServicePaxVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_single_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost SGL')),
                ('cost_double_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost DBL')),
                ('cost_triple_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost TPL')),
                ('cost_qdrple_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost QPL')),
                ('price_single_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price SGL')),
                ('price_double_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price DBL')),
                ('price_triple_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price TPL')),
                ('price_qdrple_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price QPL')),
                ('free_cost_single', models.SmallIntegerField(default=0)),
                ('free_cost_double', models.SmallIntegerField(default=0)),
                ('free_cost_triple', models.SmallIntegerField(default=0)),
                ('free_cost_qdrple', models.SmallIntegerField(default=0)),
                ('free_price_single', models.SmallIntegerField(default=0)),
                ('free_price_double', models.SmallIntegerField(default=0)),
                ('free_price_triple', models.SmallIntegerField(default=0)),
                ('free_price_qdrple', models.SmallIntegerField(default=0)),
                ('manual_costs', models.BooleanField(default=False, verbose_name='Manual Costs')),
                ('manual_prices', models.BooleanField(default=False, verbose_name='Manual Prices')),
                ('quote_pax_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.QuotePaxVariant', verbose_name='Pax Variant')),
            ],
            options={
                'verbose_name': 'Quote Service Pax Variant',
                'verbose_name_plural': 'Quote Services Pax Variants',
            },
        ),
        migrations.CreateModel(
            name='NewQuotePackage',
            fields=[
                ('newquoteservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewQuoteService')),
                ('price_by_package_catalogue', models.BooleanField(default=False, verbose_name='Prices By Catalogue')),
            ],
            options={
                'verbose_name': 'Quote Package',
                'verbose_name_plural': 'Quotes Packages',
                'default_permissions': ('add', 'change'),
            },
            bases=('booking.newquoteservice',),
        ),
        migrations.CreateModel(
            name='QuoteProvidedService',
            fields=[
                ('newquoteservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewQuoteService')),
            ],
            options={
                'verbose_name': 'Quote Provided Service',
                'verbose_name_plural': 'Quote Services',
                'default_permissions': ('add', 'change'),
            },
            bases=('booking.newquoteservice',),
        ),
        migrations.CreateModel(
            name='NewQuoteAllotment',
            fields=[
                ('quoteprovidedservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.QuoteProvidedService')),
                ('board_type', models.CharField(choices=[('NB', 'No Board'), ('BB', 'Breakfast Board'), ('HB', 'Half Board'), ('FB', 'Full Board'), ('AI', 'All Included')], max_length=5)),
            ],
            options={
                'verbose_name': 'Quote Accomodation',
                'verbose_name_plural': 'Quotes Accomodations',
                'default_permissions': ('add', 'change'),
            },
            bases=('booking.quoteprovidedservice', models.Model),
        ),
        migrations.CreateModel(
            name='NewQuoteTransfer',
            fields=[
                ('quoteprovidedservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.QuoteProvidedService')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('schedule_time_from', models.TimeField(blank=True, null=True)),
                ('schedule_time_to', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Quote Transfer',
                'verbose_name_plural': 'Quotes Transfers',
                'default_permissions': ('add', 'change'),
            },
            bases=('booking.quoteprovidedservice', models.Model),
        ),
        migrations.CreateModel(
            name='NewQuoteExtra',
            fields=[
                ('quoteprovidedservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.QuoteProvidedService')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('parameter', models.SmallIntegerField(default=0, verbose_name='Hours')),
            ],
            options={
                'verbose_name': 'Quote Extra',
                'verbose_name_plural': 'Quotes Extras',
                'default_permissions': ('add', 'change'),
            },
            bases=('booking.quoteprovidedservice', models.Model),
        ),
        migrations.CreateModel(
            name='NewQuoteServiceBookDetail',
            fields=[
                ('newquoteservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewQuoteService')),
            ],
            options={
                'verbose_name': 'Quote Provided Service Book Detail',
                'verbose_name_plural': 'Quotes Provided Services Book Details',
            },
            bases=('booking.newquoteservice',),
        ),
        migrations.CreateModel(
            name='NewQuoteServiceBookDetailAllotment',
            fields=[
                ('newquoteservicebookdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewQuoteServiceBookDetail')),
                ('board_type', models.CharField(choices=[('NB', 'No Board'), ('BB', 'Breakfast Board'), ('HB', 'Half Board'), ('FB', 'Full Board'), ('AI', 'All Included')], max_length=5)),
            ],
            options={
                'verbose_name': 'Quote ProvidedService Book Detail Allotment',
                'verbose_name_plural': 'Quotes Provided Services Book Details Allotments',
            },
            bases=('booking.newquoteservicebookdetail', models.Model),
        ),
        migrations.CreateModel(
            name='NewQuoteServiceBookDetailTransfer',
            fields=[
                ('newquoteservicebookdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewQuoteServiceBookDetail')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('schedule_time_from', models.TimeField(blank=True, null=True)),
                ('schedule_time_to', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Quote Provided Service Book Detail Transfer',
                'verbose_name_plural': 'Quotes Provided Services Book Details Transfers',
            },
            bases=('booking.newquoteservicebookdetail', models.Model),
        ),
        migrations.CreateModel(
            name='NewQuoteServiceBookDetailExtra',
            fields=[
                ('newquoteservicebookdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='booking.NewQuoteServiceBookDetail')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('parameter', models.SmallIntegerField(default=0, verbose_name='Hours')),
            ],
            options={
                'verbose_name': 'Quote Provided Service Book Detail Extra',
                'verbose_name_plural': 'Quotes Provided Services Book Details Extras',
            },
            bases=('booking.newquoteservicebookdetail', models.Model),
        ),
        migrations.AlterModelOptions(
            name='providerbookingpayment',
            options={'ordering': ['-date'], 'verbose_name': 'Payment to Provider', 'verbose_name_plural': 'Payments to Providers'},
        ),
        migrations.AddField(
            model_name='newquoteservicepaxvariant',
            name='quote_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quoteservice_paxvariants', to='booking.NewQuoteService'),
        ),
        migrations.AddField(
            model_name='newquoteservice',
            name='base_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newquoteservice_base_location', to='config.Location', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='newquoteservice',
            name='base_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newquoteservice_base_service', to='config.Service'),
        ),
        migrations.AddField(
            model_name='newquoteservice',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_new_services', to='booking.Quote'),
        ),
        migrations.AddField(
            model_name='newquoteservice',
            name='service_addon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newquoteservice_service_addon', to='config.Addon', verbose_name='Addon'),
        ),
        migrations.AddField(
            model_name='newbookingservicepax',
            name='booking_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooming_list', to='booking.NewBookingService'),
        ),
        migrations.AddField(
            model_name='newbookingservice',
            name='base_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingservice_base_location', to='config.Location', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='newbookingservice',
            name='base_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newbookingservice_base_service', to='config.Service'),
        ),
        migrations.AddField(
            model_name='newbookingservice',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_services', to='booking.Booking'),
        ),
        migrations.AddField(
            model_name='newbookingservice',
            name='service_addon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newbookingservice_service_addon', to='config.Addon', verbose_name='Addon'),
        ),
        migrations.AddField(
            model_name='quoteprovidedservice',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='finance.Provider'),
        ),
        migrations.AddField(
            model_name='quoteprovidedservice',
            name='quote_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.NewQuotePackage'),
        ),
        migrations.AlterUniqueTogether(
            name='newquoteservicepaxvariant',
            unique_together=set([('quote_pax_variant', 'quote_service')]),
        ),
        migrations.AddField(
            model_name='newquoteservicebookdetail',
            name='quote_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quoteservicebookdetail_provided', to='booking.QuoteProvidedService'),
        ),
        migrations.AlterUniqueTogether(
            name='bookingextracomponent',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='bookingextracomponent',
            name='booking_extra',
        ),
        migrations.RemoveField(
            model_name='bookingextracomponent',
            name='component',
        ),
        migrations.RemoveField(
            model_name='bookingservicesupplement',
            name='booking_service',
        ),
        migrations.RemoveField(
            model_name='bookingservicesupplement',
            name='supplement',
        ),
        migrations.RemoveField(
            model_name='bookingtransfersupplement',
            name='bookingservicesupplement_ptr',
        ),
        migrations.AlterUniqueTogether(
            name='quoteextracomponent',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='quoteextracomponent',
            name='component',
        ),
        migrations.RemoveField(
            model_name='quoteextracomponent',
            name='quote_extra',
        ),
        migrations.AlterUniqueTogether(
            name='quoteextracomponentpaxvariant',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='quoteextracomponentpaxvariant',
            name='quote_extra_component',
        ),
        migrations.RemoveField(
            model_name='quoteextracomponentpaxvariant',
            name='quote_service_pax_variant',
        ),
        migrations.RemoveField(
            model_name='servicesupplementbookingpax',
            name='booking_pax',
        ),
        migrations.RemoveField(
            model_name='servicesupplementbookingpax',
            name='service_supplment',
        ),
        migrations.DeleteModel(
            name='BookingExtraComponent',
        ),
        migrations.DeleteModel(
            name='BookingServiceSupplement',
        ),
        migrations.DeleteModel(
            name='BookingTransferSupplement',
        ),
        migrations.DeleteModel(
            name='QuoteExtraComponent',
        ),
        migrations.DeleteModel(
            name='QuoteExtraComponentPaxVariant',
        ),
        migrations.DeleteModel(
            name='ServiceSupplementBookingPax',
        ),
    ]
