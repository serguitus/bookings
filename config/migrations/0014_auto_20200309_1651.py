# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-03-09 20:51
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('config', '0013_auto_20200216_1330'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_after', models.SmallIntegerField(blank=True, default=0, null=True, verbose_name='Days after')),
                ('days_duration', models.SmallIntegerField(blank=True, default=0, null=True, verbose_name='Days duration')),
                ('name', models.CharField(default='Detail', max_length=250)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Service Detail',
                'verbose_name_plural': 'Services Details',
            },
        ),
        migrations.CreateModel(
            name='ServiceDetailAllotment',
            fields=[
                ('servicedetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.ServiceDetail')),
                ('board_type', models.CharField(choices=[('NB', 'No Board'), ('BB', 'Breakfast Board'), ('HB', 'Half Board'), ('FB', 'Full Board'), ('AI', 'All Included')], max_length=5)),
                ('detail_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Allotment')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.RoomType')),
            ],
            options={
                'verbose_name': 'Service Detail Accomodation',
                'verbose_name_plural': 'Services Details Accomodations',
            },
            bases=('config.servicedetail', models.Model),
        ),
        migrations.CreateModel(
            name='ServiceDetailExtra',
            fields=[
                ('servicedetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.ServiceDetail')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('parameter', models.SmallIntegerField(default=0, verbose_name='Hours')),
                ('detail_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Extra')),
                ('dropoff_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_dropoff_office', to='config.CarRentalOffice')),
                ('pickup_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_pickup_office', to='config.CarRentalOffice')),
            ],
            options={
                'verbose_name': 'Service Detail Extra',
                'verbose_name_plural': 'Services Details Extras',
            },
            bases=('config.servicedetail', models.Model),
        ),
        migrations.CreateModel(
            name='ServiceDetailTransfer',
            fields=[
                ('servicedetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.ServiceDetail')),
                ('quantity', models.SmallIntegerField(default=1)),
                ('schedule_time_from', models.TimeField(blank=True, null=True)),
                ('schedule_time_to', models.TimeField(blank=True, null=True)),
                ('detail_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Transfer')),
                ('dropoff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_dropoff', to='config.Allotment')),
                ('location_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detail_location_from', to='config.Location', verbose_name='Location from')),
                ('location_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detail_location_to', to='config.Location', verbose_name='Location to')),
                ('pickup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_pickup', to='config.Allotment')),
                ('place_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_place_from', to='config.Place')),
                ('place_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_place_to', to='config.Place')),
                ('schedule_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_schedule_from', to='config.Schedule')),
                ('schedule_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_schedule_to', to='config.Schedule')),
            ],
            options={
                'verbose_name': 'Service Detail Transfer',
                'verbose_name_plural': 'Services Details Transfers',
            },
            bases=('config.servicedetail', models.Model),
        ),
        migrations.AddField(
            model_name='servicedetail',
            name='addon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='config.Addon', verbose_name='Addon'),
        ),
        migrations.AddField(
            model_name='servicedetail',
            name='base_detail_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detail_service', to='config.Service'),
        ),
        migrations.AddField(
            model_name='servicedetail',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='config.Location', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='servicedetail',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_details', to='config.Service'),
        ),
    ]
