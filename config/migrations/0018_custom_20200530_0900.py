# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-03-29 02:16
from __future__ import unicode_literals

from django.db import migrations


def migrate_package(apps, schema_editor):

    Package = apps.get_model('booking', 'Package')
    PackageAllotment = apps.get_model('booking', 'PackageAllotment')
    PackageTransfer = apps.get_model('booking', 'PackageTransfer')
    PackageExtra = apps.get_model('booking', 'PackageExtra')
    Extra = apps.get_model('config', 'Extra')
    ServiceBookDetailAllotment = apps.get_model('config', 'ServiceBookDetailAllotment')
    ServiceBookDetailTransfer = apps.get_model('config', 'ServiceBookDetailTransfer')
    ServiceBookDetailExtra = apps.get_model('config', 'ServiceBookDetailExtra')
    AgencyPackageService = apps.get_model('booking', 'AgencyPackageService')
    AgencyPackageDetail = apps.get_model('booking', 'AgencyPackageDetail')
    AgencyExtraService = apps.get_model('config', 'AgencyExtraService')
    AgencyExtraDetail = apps.get_model('config', 'AgencyExtraDetail')

    QuotePackage = apps.get_model('booking', 'QuotePackage')
    QuotePackageAllotment = apps.get_model('booking', 'QuotePackageAllotment')
    QuotePackageTransfer = apps.get_model('booking', 'QuotePackageTransfer')
    QuotePackageExtra = apps.get_model('booking', 'QuotePackageExtra')
    QuoteExtraPackage = apps.get_model('booking', 'QuoteExtraPackage')
    NewQuoteAllotment = apps.get_model('booking', 'NewQuoteAllotment')
    NewQuoteTransfer = apps.get_model('booking', 'NewQuoteTransfer')
    NewQuoteExtra = apps.get_model('booking', 'NewQuoteExtra')

    BookingPackage = apps.get_model('booking', 'BookingPackage')
    BookingPackageAllotment = apps.get_model('booking', 'BookingPackageAllotment')
    BookingPackageTransfer = apps.get_model('booking', 'BookingPackageTransfer')
    BookingPackageExtra = apps.get_model('booking', 'BookingPackageExtra')
    BookingExtraPackage = apps.get_model('booking', 'BookingExtraPackage')
    BookingProvidedAllotment = apps.get_model('booking', 'BookingProvidedAllotment')
    BookingProvidedTransfer = apps.get_model('booking', 'BookingProvidedTransfer')
    BookingProvidedExtra = apps.get_model('booking', 'BookingProvidedExtra')
    BookingServicePax = apps.get_model('booking', 'BookingServicePax')
    BaseBookingServicePax = apps.get_model('booking', 'BaseBookingServicePax')

    ProviderBookingPaymentService = apps.get_model('booking', 'ProviderBookingPaymentService')
    ProviderPaymentBookingProvided = apps.get_model('booking', 'ProviderPaymentBookingProvided')

    for package in Package.objects.all():
        new_extra = Extra()
        build_new_extra(new_extra, package)
        new_extra.save()
        for package_service in PackageAllotment.objects.filter(package=package):
            new_detail = ServiceBookDetailAllotment()
            build_new_book_detail_allotment(new_detail, package_service)
            new_detail.service_id = new_extra.id
            new_detail.save()
        for package_service in PackageTransfer.objects.filter(package=package):
            new_detail = ServiceBookDetailTransfer()
            build_new_book_detail_transfer(new_detail, package_service)
            new_detail.service_id = new_extra.id
            new_detail.save()
        for package_service in PackageExtra.objects.filter(package=package):
            new_detail = ServiceBookDetailExtra()
            build_new_book_detail_extra(new_detail, package_service)
            new_detail.service_id = new_extra.id
            new_detail.save()

        for agency_service in AgencyPackageService.objects.filter(service=package):
            new_agency_service = AgencyExtraService()
            build_new_agency_extra_service(new_agency_service, agency_service)
            new_agency_service.service_id = new_extra.id
            new_agency_service.save()

            for agency_detail in AgencyPackageDetail.objects.filter(agency_service=agency_service):
                new_agency_detail = AgencyExtraDetail()
                build_new_agency_extra_detail(new_agency_detail, agency_detail)
                new_agency_detail.agency_service_id = new_agency_service.id
                new_agency_detail.save()

        for service in QuotePackage.objects.filter(service=package):
            new_service = QuoteExtraPackage()
            build_quote_extra_package(new_service, service)
            new_service.service = new_extra
            new_service.save()
            for package_service in QuotePackageAllotment.objects.filter(quote_package=service):
                new_package_service = NewQuoteAllotment()
                build_new_quote_package_allotment(new_package_service, package_service)
                new_package_service.quote_package = new_service
                new_package_service.save()
            for package_service in QuotePackageTransfer.objects.filter(quote_package=service):
                new_package_service = NewQuoteTransfer()
                build_new_quote_package_transfer(new_package_service, package_service)
                new_package_service.quote_package = new_service
                new_package_service.save()
            for package_service in QuotePackageExtra.objects.filter(quote_package=service):
                new_package_service = NewQuoteExtra()
                build_new_quote_package_extra(new_package_service, package_service)
                new_package_service.quote_package = new_service
                new_package_service.save()

        for service in BookingPackage.objects.filter(service=package):
            new_service = BookingExtraPackage()
            build_booking_extra_package(new_service, service)
            new_service.service = new_extra
            new_service.save()
            for pax in BookingServicePax.objects.filter(booking_service=service.pk):
                new_pax = BaseBookingServicePax()
                build_new_booking_pax(new_pax, pax)
                new_pax.save()
            for package_service in BookingPackageAllotment.objects.filter(booking_package=service):
                new_package_service = BookingProvidedAllotment()
                build_new_booking_package_allotment(new_package_service, package_service)
                new_package_service.booking_package = new_service
                new_package_service.save()
            for package_service in BookingPackageTransfer.objects.filter(booking_package=service):
                new_package_service = BookingProvidedTransfer()
                build_new_booking_package_transfer(new_package_service, package_service)
                new_package_service.booking_package = new_service
                new_package_service.save()
            for package_service in BookingPackageExtra.objects.filter(booking_package=service):
                new_package_service = BookingProvidedExtra()
                build_new_booking_package_extra(new_package_service, package_service)
                new_package_service.booking_package = new_service
                new_package_service.save()

            # migration for payments on package services.
            # payments on other types of service done at booking 0034_custom.
            for pay_service in ProviderBookingPaymentService.objects.filter(provider_service=service):
                new_pay_service = ProviderPaymentBookingProvided()
                new_pay_service.provider_payment_id = pay_service.provider_payment_id

                # created dummy cancelled service to support payment
                new_cancelled_booking_extra_service = BookingProvidedExtra()

                new_cancelled_booking_extra_service.booking_id = service.booking_id
                new_cancelled_booking_extra_service.booking_package = new_service
                new_cancelled_booking_extra_service.provider_id = service.provider_id
                new_cancelled_booking_extra_service.conf_number = service.conf_number
                # provider service now points to extra replacing package
                new_cancelled_booking_extra_service.base_service_id = new_extra.id
                new_cancelled_booking_extra_service.name = service.name
                new_cancelled_booking_extra_service.description = service.description
                new_cancelled_booking_extra_service.time = service.time
                new_cancelled_booking_extra_service.datetime_from = service.datetime_from
                new_cancelled_booking_extra_service.datetime_to = service.datetime_to
                new_cancelled_booking_extra_service.base_location_id = service.base_location_id
                new_cancelled_booking_extra_service.service_addon_id = service.service_addon_id
                new_cancelled_booking_extra_service.status = 'CN'
                new_cancelled_booking_extra_service.base_category = 'PE'
                new_cancelled_booking_extra_service.cost_amount = 0.0
                new_cancelled_booking_extra_service.cost_amount_to_pay = 0.0
                new_cancelled_booking_extra_service.cost_amount_paid = 0.0
                new_cancelled_booking_extra_service.has_payment = True
                new_cancelled_booking_extra_service.cost_comments = service.cost_comments
                new_cancelled_booking_extra_service.manual_cost = service.manual_cost
                new_cancelled_booking_extra_service.price_amount = service.price_amount
                new_cancelled_booking_extra_service.price_comments = service.price_comments
                new_cancelled_booking_extra_service.manual_price = service.manual_price
                new_cancelled_booking_extra_service.p_notes = "NO TOCAR: SERVICIO GENERADO PARA MIGRACION DE PACKAGES - " + service.p_notes

                new_cancelled_booking_extra_service.parameter = 0
                new_cancelled_booking_extra_service.quantity = 1
                new_cancelled_booking_extra_service.version = 0

                new_cancelled_booking_extra_service.service = new_extra
                new_cancelled_booking_extra_service.save()

                new_pay_service.provider_service_id = new_cancelled_booking_extra_service.id

                new_pay_service.amount_paid = pay_service.amount_paid
                new_pay_service.service_cost_amount_to_pay = pay_service.service_cost_amount_to_pay
                new_pay_service.service_cost_amount_paid = pay_service.service_cost_amount_paid
                new_pay_service.save()


def build_new_extra(new_extra, package):
    new_extra.pk = package.pk
    new_extra.name = package.name + ' (PACKAGE)'
    new_extra.description = package.description
    new_extra.service_category_id = package.service_category_id
    new_extra.category = 'E' # extra
    new_extra.grouping = package.grouping
    new_extra.pax_range = package.pax_range
    new_extra.child_age = package.child_age
    new_extra.child_discount_percent = package.child_discount_percent
    new_extra.infant_age = package.infant_age
    new_extra.location_id = package.location_id
    new_extra.new_time = package.time
    new_extra.enabled = package.enabled

    new_extra.cost_type = package.amounts_type
    new_extra.has_pax_range = package.has_pax_range
    new_extra.max_capacity = None
    new_extra.car_rental = None
    new_extra.parameter_type = 'S' # stay

    return new_extra


def copy_package_service(new_detail, service):
    new_detail.name = service.name
    new_detail.description = service.description
    new_detail.days_after = service.days_after
    new_detail.days_duration = service.days_duration
    new_detail.service_addon_id = service.service_addon_id
    new_detail.time = service.time
    new_detail.base_location_id = service.base_location_id
    new_detail.base_service_id = service.base_service_id


def build_new_book_detail_allotment(new_detail, package_service):
    copy_package_service(new_detail, package_service)

    new_detail.book_service_id = package_service.service_id
    new_detail.room_type_id = package_service.room_type_id
    new_detail.board_type = package_service.board_type
    return new_detail


def build_new_book_detail_transfer(new_detail, package_service):
    copy_package_service(new_detail, package_service)

    new_detail.book_service_id = package_service.service_id
    new_detail.pickup_id = package_service.pickup_id
    new_detail.dropoff_id = package_service.dropoff_id
    new_detail.location_from_id = package_service.location_from_id
    new_detail.location_to_id = package_service.location_to_id
    new_detail.place_from_id = package_service.place_from_id
    new_detail.place_to_id = package_service.place_to_id
    new_detail.schedule_from_id = package_service.schedule_from_id
    new_detail.schedule_to_id = package_service.schedule_to_id
    new_detail.schedule_time_from = package_service.schedule_time_from
    new_detail.schedule_time_to = package_service.schedule_time_to
    new_detail.quantity = package_service.quantity
    return new_detail


def build_new_book_detail_extra(new_detail, package_service):
    copy_package_service(new_detail, package_service)

    new_detail.book_service_id = package_service.service_id
    new_detail.pickup_office_id = package_service.pickup_office_id
    new_detail.dropoff_office_id = package_service.dropoff_office_id
    new_detail.parameter = package_service.parameter
    new_detail.quantity = package_service.quantity
    return new_detail


def build_new_agency_extra_service(new_agency_service, agency_service):
    new_agency_service.pk = None
    new_agency_service.id = None
    new_agency_service.agency_id = agency_service.agency_id
    new_agency_service.date_from = agency_service.date_from
    new_agency_service.date_to = agency_service.date_to
    return new_agency_service


def build_new_agency_extra_detail(new_agency_detail, agency_detail):
    new_agency_detail.pk = None
    new_agency_detail.id = None
    new_agency_detail.addon_id = 80
    new_agency_detail.pax_range_min = agency_detail.pax_range_min
    if new_agency_detail.pax_range_min is None:
        new_agency_detail.pax_range_min = 0
    new_agency_detail.pax_range_max = agency_detail.pax_range_max
    if new_agency_detail.pax_range_max is None:
        new_agency_detail.pax_range_max = 0
    new_agency_detail.ad_1_amount = agency_detail.ad_1_amount
    new_agency_detail.ad_2_amount = agency_detail.ad_2_amount
    new_agency_detail.ad_3_amount = agency_detail.ad_3_amount
    new_agency_detail.ad_4_amount = agency_detail.ad_4_amount
    new_agency_detail.ch_1_ad_0_amount = agency_detail.ch_1_ad_0_amount
    new_agency_detail.ch_1_ad_1_amount = agency_detail.ch_1_ad_1_amount
    new_agency_detail.ch_1_ad_2_amount = agency_detail.ch_1_ad_2_amount
    new_agency_detail.ch_1_ad_3_amount = agency_detail.ch_1_ad_3_amount
    new_agency_detail.ch_1_ad_4_amount = agency_detail.ch_1_ad_4_amount
    new_agency_detail.ch_2_ad_0_amount = agency_detail.ch_2_ad_0_amount
    new_agency_detail.ch_2_ad_1_amount = agency_detail.ch_2_ad_1_amount
    new_agency_detail.ch_2_ad_2_amount = agency_detail.ch_2_ad_2_amount
    new_agency_detail.ch_2_ad_3_amount = agency_detail.ch_2_ad_3_amount
    new_agency_detail.ch_2_ad_4_amount = agency_detail.ch_2_ad_4_amount
    new_agency_detail.ch_3_ad_0_amount = agency_detail.ch_3_ad_0_amount
    new_agency_detail.ch_3_ad_1_amount = agency_detail.ch_3_ad_1_amount
    new_agency_detail.ch_3_ad_2_amount = agency_detail.ch_3_ad_2_amount
    new_agency_detail.ch_3_ad_3_amount = agency_detail.ch_3_ad_3_amount
    new_agency_detail.ch_3_ad_4_amount = agency_detail.ch_3_ad_4_amount
    return new_agency_detail


def copy_quote_service(new_service, service):
    new_service.pk = service.pk
    new_service.base_service_id = service.base_service_id
    new_service.name = service.name
    new_service.description = service.description
    new_service.time = service.time
    new_service.datetime_from = service.datetime_from
    new_service.datetime_to = service.datetime_to
    new_service.status = service.status
    new_service.base_location_id = service.base_location_id
    new_service.service_addon_id = service.service_addon_id


def build_quote_extra_package(new_service, service):
    copy_quote_service(new_service, service)
    new_service.quote_id = service.quote_id

    new_service.price_by_package_catalogue = service.price_by_package_catalogue
    new_service.parameter = 0
    new_service.quantity = 1
    new_service.dropoff_office = None
    new_service.pickup_office = None

    return new_service


def build_new_quote_package_allotment(new_service, package_service):
    copy_quote_service(new_service, package_service)
    new_service.quote_id = package_service.quote_package.quote_id
    new_service.provider_id = package_service.provider_id

    new_service.service_id = package_service.service_id
    new_service.room_type_id = package_service.room_type_id
    new_service.board_type = package_service.board_type

    new_service.pk = None
    return new_service


def build_new_quote_package_transfer(new_service, package_service):
    copy_quote_service(new_service, package_service)
    new_service.quote_id = package_service.quote_package.quote_id
    new_service.provider_id = package_service.provider_id

    new_service.service_id = package_service.service_id
    new_service.pickup_id = package_service.pickup_id
    new_service.dropoff_id = package_service.dropoff_id
    new_service.location_from_id = package_service.location_from_id
    new_service.location_to_id = package_service.location_to_id
    new_service.place_from_id = package_service.place_from_id
    new_service.place_to_id = package_service.place_to_id
    new_service.schedule_from_id = package_service.schedule_from_id
    new_service.schedule_to_id = package_service.schedule_to_id
    new_service.schedule_time_from = package_service.schedule_time_from
    new_service.schedule_time_to = package_service.schedule_time_to
    new_service.quantity = package_service.quantity

    new_service.pk = None
    return new_service


def build_new_quote_package_extra(new_service, package_service):
    copy_quote_service(new_service, package_service)
    new_service.quote_id = package_service.quote_package.quote_id
    new_service.provider_id = package_service.provider_id

    new_service.service_id = package_service.service_id
    new_service.pickup_office_id = package_service.pickup_office_id
    new_service.dropoff_office_id = package_service.dropoff_office_id
    new_service.parameter = package_service.parameter
    new_service.quantity = package_service.quantity

    new_service.pk = None
    return new_service


def copy_booking_service(new_service, service):
    new_service.pk = service.pk
    new_service.provider_id = service.provider_id
    new_service.base_service_id = service.base_service_id
    new_service.name = service.name
    new_service.description = service.description
    new_service.time = service.time
    new_service.datetime_from = service.datetime_from
    new_service.datetime_to = service.datetime_to
    new_service.status = service.status
    new_service.base_location_id = service.base_location_id
    new_service.base_category = service.base_category
    new_service.service_addon_id = service.service_addon_id
    new_service.cost_amount = service.cost_amount
    new_service.cost_comments = service.cost_comments
    new_service.manual_cost = service.manual_cost
    new_service.price_amount = service.price_amount
    new_service.price_comments = service.price_comments
    new_service.manual_price = service.manual_price
    new_service.p_notes = service.p_notes
    if hasattr(service, 'v_notes'):
        new_service.v_notes = service.v_notes


def build_booking_extra_package(new_service, service):
    copy_booking_service(new_service, service)
    new_service.booking_id = service.booking_id

    new_service.price_by_package_catalogue = service.price_by_package_catalogue
    new_service.parameter = 0
    new_service.quantity = 1
    new_service.dropoff_office = None
    new_service.pickup_office = None
    new_service.voucher_detail = service.voucher_detail
    new_service.version = service.version
    return new_service


def build_new_booking_package_allotment(new_service, package_service):
    copy_booking_service(new_service, package_service)
    new_service.booking_id = package_service.booking_package.booking_id

    new_service.service_id = package_service.service_id
    new_service.room_type_id = package_service.room_type_id
    new_service.board_type = package_service.board_type
    new_service.version = package_service.version

    return new_service


def build_new_booking_package_transfer(new_service, package_service):
    copy_booking_service(new_service, package_service)
    new_service.booking_id = package_service.booking_package.booking_id

    new_service.service_id = package_service.service_id
    new_service.pickup_id = package_service.pickup_id
    new_service.dropoff_id = package_service.dropoff_id
    new_service.location_from_id = package_service.location_from_id
    new_service.location_to_id = package_service.location_to_id
    new_service.place_from_id = package_service.place_from_id
    new_service.place_to_id = package_service.place_to_id
    new_service.schedule_from_id = package_service.schedule_from_id
    new_service.schedule_to_id = package_service.schedule_to_id
    new_service.schedule_time_from = package_service.schedule_time_from
    new_service.schedule_time_to = package_service.schedule_time_to
    new_service.quantity = package_service.quantity
    new_service.version = package_service.version

    return new_service


def build_new_booking_package_extra(new_service, package_service):
    copy_booking_service(new_service, package_service)
    new_service.booking_id = package_service.booking_package.booking_id

    new_service.service_id = package_service.service_id
    new_service.pickup_office_id = package_service.pickup_office_id
    new_service.dropoff_office_id = package_service.dropoff_office_id
    new_service.parameter = package_service.parameter
    new_service.quantity = package_service.quantity
    new_service.version = package_service.version

    return new_service


def build_new_booking_pax(new_pax, pax):
    new_pax.pk = pax.pk
    new_pax.booking_pax_id = pax.booking_pax_id
    new_pax.booking_service_id = pax.booking_service_id
    new_pax.group = pax.group
    new_pax.force_adult = pax.force_adult

    new_pax.is_cost_free = pax.is_cost_free
    new_pax.cost_amount = pax.cost_amount
    new_pax.cost_comments = pax.cost_comments

    new_pax.is_price_free = pax.is_price_free
    new_pax.price_amount = pax.price_amount
    new_pax.price_comments = pax.price_comments

    new_pax.version = pax.version


def backwards_function(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('booking', '0031_auto_20200530_0818'),
        ('config', '0017_auto_20200530_0818'),
    ]

    operations = [

        migrations.RunPython(migrate_package, backwards_function),

    ]
